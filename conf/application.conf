# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

play.filters {

  enabled += play.filters.gzip.GzipFilter
  enabled += id.openbox.sasset.filters.Filters
  disabled += play.filters.csrf.CSRFFilter
  disabled += play.filters.headers.SecurityHeadersFilter
  disabled += play.filters.hosts.AllowedHostsFilter

  gzip {
    contentType {

      # If non empty, then a response will only be compressed if its content type is in this list.
      whiteList = ["text/*", "application/javascript", "application/json"]

      # The black list is only used if the white list is empty.
      # Compress all responses except the ones whose content type is in this list.
      blackList = []
    }
  }

  # Disabled filters remove elements from the enabled list.
  #disabled += filters.ExampleFilter

  ## CORS filter configuration
  # https://www.playframework.com/documentation/latest/CorsFilter
  # ~~~~~
  # CORS is a protocol that allows web applications to make requests from the browser
  # across different domains.
  # NOTE: You MUST apply the CORS configuration before the CSRF filter, as CSRF has
  # dependencies on CORS settings.
  cors {

  }

  ## CSRF Filter
  # https://www.playframework.com/documentation/latest/ScalaCsrf#Applying-a-global-CSRF-filter
  # https://www.playframework.com/documentation/latest/JavaCsrf#Applying-a-global-CSRF-filter
  # ~~~~~
  # Play supports multiple methods for verifying that a request is not a CSRF request.
  # The primary mechanism is a CSRF token. This token gets placed either in the query string
  # or body of every form submitted, and also gets placed in the users session.
  # Play then verifies that both tokens are present and match.
  csrf {

  }

  ## Security headers filter configuration
  # https://www.playframework.com/documentation/latest/SecurityHeaders
  # ~~~~~
  # Defines security headers that prevent XSS attacks.
  # If enabled, then all options are set to the below configuration by default:
  headers {

  }

  ## Allowed hosts filter configuration
  # https://www.playframework.com/documentation/latest/AllowedHostsFilter
  # ~~~~~
  # Play provides a filter that lets you configure which hosts can access your application.
  # This is useful to prevent cache poisoning attacks.
  hosts {

  }
}

# Assets Configuration
play.assets {
#  path = "/public/ui"
#  urlPrefix = "/"
  checkForMinified = true
  defaultCache = "max-age=3600"
}

play.http.secret.key = ${?APPLICATION_SECRET}

db.default.driver = org.postgresql.Driver
db.default.url = "jdbc:postgresql://localhost:5432/sasset?user=postgres&password=postgres"

play.evolutions.autoApply = true

ebean.default = ["id.openbox.sasset.models.*"]

play.modules {
  enabled += play.modules.swagger.SwaggerModule
  enabled += id.openbox.sasset.modules.Module
}

api.version = "beta"
swagger.filter = "id.openbox.sasset.filters.SwaggerFilter"

swagger.api.info.title = "FAM Telkom Indonesia API"
swagger.api.info.description = "This is a documentation of all API in FAM Telkom Indonesia"
swagger.api.info.contact = "Nikho Sagala"
swagger.api.info.license = "Apache 2.0"
swagger.api.info.licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0.html"
